import cPickle, base64
try:
	from SimpleSession.versions.v65 import beginRestore,\
	    registerAfterModelsCB, reportRestoreError, checkVersion
except ImportError:
	from chimera import UserError
	raise UserError('Cannot open session that was saved in a'
	    ' newer version of Chimera; update your version')
checkVersion([1, 13, 1, 41965])
import chimera
from chimera import replyobj
replyobj.status('Restoring session...', \
    blankAfter=0)
replyobj.status('Beginning session restore...', \
    blankAfter=0, secondary=True)
beginRestore()

def restoreCoreModels():
	from SimpleSession.versions.v65 import init, restoreViewer, \
	     restoreMolecules, restoreColors, restoreSurfaces, \
	     restoreVRML, restorePseudoBondGroups, restoreModelAssociations
	molInfo = cPickle.loads(base64.b64decode('gAJ9cQEoVRFyaWJib25JbnNpZGVDb2xvcnECSwZOfYdVCWJhbGxTY2FsZXEDSwZHP9AAAAAAAAB9h1UJcG9pbnRTaXplcQRLBkc/8AAAAAAAAH2HVQVjb2xvcnEFSwZLAH1xBihLAV1xB0sBYUsCXXEISwJhSwNdcQlLA2FLBF1xCksEYUsFXXELSwVhdYdVCnJpYmJvblR5cGVxDEsGSwB9h1UKc3RpY2tTY2FsZXENSwZHP/AAAAAAAAB9h1UMbW1DSUZIZWFkZXJzcQ5dcQ8oTk5OTk5OZVUMYXJvbWF0aWNNb2RlcRBLBksBfYdVCnZkd0RlbnNpdHlxEUsGR0AUAAAAAAAAfYdVBmhpZGRlbnESSwaJfYdVDWFyb21hdGljQ29sb3JxE0sGTn2HVQ9yaWJib25TbW9vdGhpbmdxFEsGSwB9h1UJYXV0b2NoYWlucRVLBoh9h1UKcGRiVmVyc2lvbnEWSwZLAn2HVQhvcHRpb25hbHEXfXEYVQhvcGVuZWRBc3EZiIlLBihVTi9ob21lL3lhbmdqYy9naXQvY2FuLWFpLWRvL3BkYmJpbmQvYXRvbV9tYXBwaW5nL3BkYi9hdG9tLjFoMjNfbGlnYW5kLmFsaWduLnBkYk5VA1BEQnEaSwF0cRt9cRwoKFVOL2hvbWUveWFuZ2pjL2dpdC9jYW4tYWktZG8vcGRiYmluZC9hdG9tX21hcHBpbmcvcGRiL2F0b20uMWU2Nl9saWdhbmQuYWxpZ24ucGRiTmgaSwF0cR1dcR4oSwJLBWUoVU4vaG9tZS95YW5namMvZ2l0L2Nhbi1haS1kby9wZGJiaW5kL2F0b21fbWFwcGluZy9wZGIvYXRvbS4xZ3BrX2xpZ2FuZC5hbGlnbi5wZGJOaBpLAXRxH11xIChLAEsDZXWHh3NVD2xvd2VyQ2FzZUNoYWluc3EhSwaJfYdVCWxpbmVXaWR0aHEiSwZHP/AAAAAAAAB9h1UPcmVzaWR1ZUxhYmVsUG9zcSNLBksAfYdVBG5hbWVxJEsGWBoAAABhdG9tLjFoMjNfbGlnYW5kLmFsaWduLnBkYn1xJShYGgAAAGF0b20uMWU2Nl9saWdhbmQuYWxpZ24ucGRiXXEmKEsCSwVlWBoAAABhdG9tLjFncGtfbGlnYW5kLmFsaWduLnBkYl1xJyhLAEsDZXWHVQ9hcm9tYXRpY0Rpc3BsYXlxKEsGiX2HVQ9yaWJib25TdGlmZm5lc3NxKUsGRz/pmZmZmZmafYdVCnBkYkhlYWRlcnNxKl1xKyh9cSxYBQAAAEhFTElYXXEtWEwAAABIRUxJWCAgICAxICAgMSBTRVIgICAgMjAwICBHTFkgICAgMjAyICAxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzcS5hc31xL1gFAAAASEVMSVhdcTBYTAAAAEhFTElYICAgIDEgICAxIFNFUiAgICAzMjkgIEdMWSAgICAzMzUgIDEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDdxMWFzfXEyWAUAAABIRUxJWF1xMyhYTAAAAEhFTElYICAgIDEgICAxIFNFUiAgICAgNzkgIFRSUCAgICAgODQgIDEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDZxNFhMAAAASEVMSVggICAgMiAgIDIgUEhFICAgIDMzMCAgTEVVICAgIDMzMyAgMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgM3E1ZXN9cTZYBQAAAEhFTElYXXE3WEwAAABIRUxJWCAgICAxICAgMSBTRVIgICAgMjAwICBHTFkgICAgMjAyICAxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzcThhc31xOVgFAAAASEVMSVhdcTpYTAAAAEhFTElYICAgIDEgICAxIFNFUiAgICAzMjkgIEdMWSAgICAzMzUgIDEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDdxO2FzfXE8WAUAAABIRUxJWF1xPShYTAAAAEhFTElYICAgIDEgICAxIFNFUiAgICAgNzkgIFRSUCAgICAgODQgIDEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDZxPlhMAAAASEVMSVggICAgMiAgIDIgUEhFICAgIDMzMCAgTEVVICAgIDMzMyAgMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgM3E/ZXNlVQNpZHNxQEsGSwBLAIZ9cUEoS2ZLAIZdcUJLBWFLAksAhl1xQ0sCYUtlSwCGXXFESwRhSwFLAIZdcUVLAWFLZEsAhl1xRksDYXWHVQ5zdXJmYWNlT3BhY2l0eXFHSwZHv/AAAAAAAAB9h1UQYXJvbWF0aWNMaW5lVHlwZXFISwZLAn2HVRRyaWJib25IaWRlc01haW5jaGFpbnFJSwaIfYdVB2Rpc3BsYXlxSksGiX1xS4hdcUwoSwBLAmVzh3Uu'))
	resInfo = cPickle.loads(base64.b64decode('gAJ9cQEoVQZpbnNlcnRxAksGVQEgfYdVC2ZpbGxEaXNwbGF5cQNLBol9h1UEbmFtZXEESwZYAwAAAEhVWH1xBShYAwAAAEUxMl1xBihLAUsEZVgDAAAASFVQXXEHKEsASwNldYdVBWNoYWlucQhLBlgBAAAAQX2HVQ5yaWJib25EcmF3TW9kZXEJSwZLAn2HVQJzc3EKSwaJiYZ9h1UIbW9sZWN1bGVxC0sGSwB9cQwoSwFOXXENSwFLAYZxDmGGSwJOXXEPSwJLAYZxEGGGSwNOXXERSwNLAYZxEmGGSwROXXETSwRLAYZxFGGGSwVOXXEVSwVLAYZxFmGGdYdVC3JpYmJvbkNvbG9ycRdLBk59cRhLBk5dcRlLBEsBhnEaYYZzh1UFbGFiZWxxG0sGWAAAAAB9h1UKbGFiZWxDb2xvcnEcSwZOfXEdSwdOXXEeSwRLAYZxH2GGc4dVCGZpbGxNb2RlcSBLBksBfYdVBWlzSGV0cSFLBoh9h1ULbGFiZWxPZmZzZXRxIksGTn2HVQhwb3NpdGlvbnEjXXEkKEsBSwGGcSVLAUsBhnEmSwFLAYZxJ0sBSwGGcShLAUsBhnEpSwFLAYZxKmVVDXJpYmJvbkRpc3BsYXlxK0sGiX2HVQhvcHRpb25hbHEsfVUEc3NJZHEtSwZK/////32HdS4='))
	atomInfo = cPickle.loads(base64.b64decode(''))
	bondInfo = cPickle.loads(base64.b64decode('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'))
	crdInfo = cPickle.loads(base64.b64decode(''))
	surfInfo = {'category': (0, None, {}), 'probeRadius': (0, None, {}), 'pointSize': (0, None, {}), 'name': [], 'density': (0, None, {}), 'colorMode': (0, None, {}), 'useLighting': (0, None, {}), 'transparencyBlendMode': (0, None, {}), 'molecule': [], 'smoothLines': (0, None, {}), 'lineWidth': (0, None, {}), 'allComponents': (0, None, {}), 'twoSidedLighting': (0, None, {}), 'customVisibility': [], 'drawMode': (0, None, {}), 'display': (0, None, {}), 'customColors': []}
	vrmlInfo = {'subid': (0, None, {}), 'display': (0, None, {}), 'id': (0, None, {}), 'vrmlString': [], 'name': (0, None, {})}
	colors = {u'': ((0.780392, 1, 0.780392), 1, u''), u'Ru': ((0.141176, 0.560784, 0.560784), 1, u'default'), u'Re': ((0.14902, 0.490196, 0.670588), 1, u'default'), u'Rf': ((0.8, 0, 0.34902), 1, u'default'), u'Ra': ((0, 0.490196, 0), 1, u'default'), u'Rb': ((0.439216, 0.180392, 0.690196), 1, u'default'), u'Rn': ((0.258824, 0.509804, 0.588235), 1, u'default'), u'Rh': ((0.0392157, 0.490196, 0.54902), 1, u'default'), u'Be': ((0.760784, 1, 0), 1, u'default'), u'Ba': ((0, 0.788235, 0), 1, u'default'), u'Bh': ((0.878431, 0, 0.219608), 1, u'default'), u'Bi': ((0.619608, 0.309804, 0.709804), 1, u'default'), u'Bk': ((0.541176, 0.309804, 0.890196), 1, u'default'), u'Br': ((0.65098, 0.160784, 0.160784), 1, u'default'), u'K': ((0.560784, 0.25098, 0.831373), 1, u'default'), u'H': ((1, 1, 1), 1, u'default'), u'P': ((1, 0.501961, 0), 1, u'default'), u'Os': ((0.14902, 0.4, 0.588235), 1, u'default'), u'Ge': ((0.4, 0.560784, 0.560784), 1, u'default'), u'Gd': ((0.270588, 1, 0.780392), 1, u'default'), u'Ga': ((0.760784, 0.560784, 0.560784), 1, u'default'), u'Pr': ((0.85098, 1, 0.780392), 1, u'default'),
u'Pt': ((0.815686, 0.815686, 0.878431), 1, u'default'), u'Pu': ((0, 0.419608, 1), 1, u'default'), u'Mg': ((0.541176, 1, 0), 1, u'default'), u'Pb': ((0.341176, 0.34902, 0.380392), 1, u'default'), u'Pa': ((0, 0.631373, 1), 1, u'default'), u'Pd': ((0, 0.411765, 0.521569), 1, u'default'), u'Cd': ((1, 0.85098, 0.560784), 1, u'default'), u'Po': ((0.670588, 0.360784, 0), 1, u'default'), u'Pm': ((0.639216, 1, 0.780392), 1, u'default'), u'Hs': ((0.901961, 0, 0.180392), 1, u'default'), u'Ho': ((0, 1, 0.611765), 1, u'default'), u'Hf': ((0.301961, 0.760784, 1), 1, u'default'), u'Hg': ((0.721569, 0.721569, 0.815686), 1, u'default'), u'He': ((0.85098, 1, 1), 1, u'default'), u'Md': ((0.701961, 0.0509804, 0.65098), 1, u'default'), u'C': ((0.564706, 0.564706, 0.564706), 1, u'default'), u'Mo': ((0.329412, 0.709804, 0.709804), 1, u'default'), u'Mn': ((0.611765, 0.478431, 0.780392), 1, u'default'), u'O': ((1, 0.0509804, 0.0509804), 1, u'default'), u'Mt': ((0.921569, 0, 0.14902), 1, u'default'), u'S': ((1, 1, 0.188235), 1, u'default'), u'W': ((0.129412, 0.580392, 0.839216), 1, u'default'),
u'sky blue': ((0.529412, 0.807843, 0.921569), 1, u'default'), u'Zn': ((0.490196, 0.501961, 0.690196), 1, u'default'), u'plum': ((0.866667, 0.627451, 0.866667), 1, u'default'), u'Eu': ((0.380392, 1, 0.780392), 1, u'default'), u'Es': ((0.701961, 0.121569, 0.831373), 1, u'default'), u'Er': ((0, 0.901961, 0.458824), 1, u'default'), u'Ni': ((0.313725, 0.815686, 0.313725), 1, u'default'), u'No': ((0.741176, 0.0509804, 0.529412), 1, u'default'), u'Na': ((0.670588, 0.360784, 0.94902), 1, u'default'), u'Nb': ((0.45098, 0.760784, 0.788235), 1, u'default'), u'Nd': ((0.780392, 1, 0.780392), 1, u'default'), u'Ne': ((0.701961, 0.890196, 0.960784), 1, u'default'), u'Np': ((0, 0.501961, 1), 1, u'default'), u'Fr': ((0.258824, 0, 0.4), 1, u'default'), u'Fe': ((0.878431, 0.4, 0.2), 1, u'default'), u'Fm': ((0.701961, 0.121569, 0.729412), 1, u'default'), u'B': ((1, 0.709804, 0.709804), 1, u'default'), u'F': ((0.564706, 0.878431, 0.313725), 1, u'default'), u'Sr': ((0, 1, 0), 1, u'default'), u'N': ((0.188235, 0.313725, 0.972549), 1, u'default'), u'Kr': ((0.360784, 0.721569, 0.819608), 1, u'default'),
u'Si': ((0.941176, 0.784314, 0.627451), 1, u'default'), u'Sn': ((0.4, 0.501961, 0.501961), 1, u'default'), u'Sm': ((0.560784, 1, 0.780392), 1, u'default'), u'V': ((0.65098, 0.65098, 0.670588), 1, u'default'), u'Sc': ((0.901961, 0.901961, 0.901961), 1, u'default'), u'Sb': ((0.619608, 0.388235, 0.709804), 1, u'default'), u'Sg': ((0.85098, 0, 0.270588), 1, u'default'), u'Se': ((1, 0.631373, 0), 1, u'default'), u'Co': ((0.941176, 0.564706, 0.627451), 1, u'default'), u'Cm': ((0.470588, 0.360784, 0.890196), 1, u'default'), u'Cl': ((0.121569, 0.941176, 0.121569), 1, u'default'), u'Ca': ((0.239216, 1, 0), 1, u'default'), u'Cf': ((0.631373, 0.211765, 0.831373), 1, u'default'), u'Ce': ((1, 1, 0.780392), 1, u'default'), u'Xe': ((0.258824, 0.619608, 0.690196), 1, u'default'), u'Tm': ((0, 0.831373, 0.321569), 1, u'default'), u'Cs': ((0.341176, 0.0901961, 0.560784), 1, u'default'), u'Cr': ((0.541176, 0.6, 0.780392), 1, u'default'), u'Cu': ((0.784314, 0.501961, 0.2), 1, u'default'), u'La': ((0.439216, 0.831373, 1), 1, u'default'), u'Li': ((0.8, 0.501961, 1), 1, u'default'),
u'Tl': ((0.65098, 0.329412, 0.301961), 1, u'default'), u'Lu': ((0, 0.670588, 0.141176), 1, u'default'), u'Lr': ((0.780392, 0, 0.4), 1, u'default'), u'Th': ((0, 0.729412, 1), 1, u'default'), u'Ti': ((0.74902, 0.760784, 0.780392), 1, u'default'), u'tan': ((0.823529, 0.705882, 0.54902), 1, u'default'), u'Te': ((0.831373, 0.478431, 0), 1, u'default'), u'Tb': ((0.188235, 1, 0.780392), 1, u'default'), u'Tc': ((0.231373, 0.619608, 0.619608), 1, u'default'), u'Ta': ((0.301961, 0.65098, 1), 1, u'default'), u'Yb': ((0, 0.74902, 0.219608), 1, u'default'), u'Db': ((0.819608, 0, 0.309804), 1, u'default'), u'Dy': ((0.121569, 1, 0.780392), 1, u'default'), u'At': ((0.458824, 0.309804, 0.270588), 1, u'default'), u'I': ((0.580392, 0, 0.580392), 1, u'default'), u'U': ((0, 0.560784, 1), 1, u'default'), u'Y': ((0.580392, 1, 1), 1, u'default'), u'Ac': ((0.439216, 0.670588, 0.980392), 1, u'default'), u'Ag': ((0.752941, 0.752941, 0.752941), 1, u'default'), u'Ir': ((0.0901961, 0.329412, 0.529412), 1, u'default'), u'Am': ((0.329412, 0.360784, 0.94902), 1, u'default'), u'Al': ((0.74902, 0.65098, 0.65098), 1, u'default'),
u'As': ((0.741176, 0.501961, 0.890196), 1, u'default'), u'Ar': ((0.501961, 0.819608, 0.890196), 1, u'default'), u'Au': ((1, 0.819608, 0.137255), 1, u'default'), u'Zr': ((0.580392, 0.878431, 0.878431), 1, u'default'), u'In': ((0.65098, 0.458824, 0.45098), 1, u'default')}
	materials = {u'default': ((0.85, 0.85, 0.85), 30), u'': ((0.85, 0.85, 0.85), 30)}
	pbInfo = {'category': [u'distance monitor'], 'bondInfo': [{'color': (0, None, {}), 'atoms': [], 'label': (0, None, {}), 'halfbond': (0, None, {}), 'labelColor': (0, None, {}), 'labelOffset': (0, None, {}), 'drawMode': (0, None, {}), 'display': (0, None, {})}], 'lineType': (1, 2, {}), 'color': (1, 20, {}), 'optional': {'fixedLabels': (True, False, (1, False, {}))}, 'display': (1, True, {}), 'showStubBonds': (1, False, {}), 'lineWidth': (1, 1, {}), 'stickScale': (1, 1, {}), 'id': [-2]}
	modelAssociations = {}
	colorInfo = (23, (u'', (0, 0, 0, 0.2)), {(u'', (0.193839, 0.452601, 0.218188, 1)): [5], (u'green', (0, 1, 0, 1)): [22], (u'', (0.663999, 0.164948, 0.651698, 1)): [4], (u'N', (0.188235, 0.313725, 0.972549, 1)): [9], (u'Cl', (0.121569, 0.941176, 0.121569, 1)): [11], (u'', (1, 1, 1, 1)): [21], (u'O', (1, 0.0509804, 0.0509804, 1)): [8], (u'sky blue', (0.529412, 0.807843, 0.921569, 1)): [1], (u'tan', (0.823529, 0.705882, 0.54902, 1)): [0], (u'plum', (0.866667, 0.627451, 0.866667, 1)): [2], (u'red', (1, 0, 0, 1)): [15], (u'yellow', (1, 1, 0, 1)): [20], (u'H', (1, 1, 1, 1)): [10], (u'', (0.663999, 0.164948, 0.651698, 0.2)): [6, 7], (u'blue', (0, 0, 1, 1)): [14], (u'', (0.1184, 0.223266, 0.901463, 1)): [3]})
	viewerInfo = {'cameraAttrs': {'center': (2.745, 66.5175, 62.820999990463), 'fieldOfView': 17.567064639105, 'nearFar': (78.610498725373, 55.895700597412), 'ortho': False, 'eyeSeparation': 50.8, 'focal': 62.820999990463}, 'viewerAttrs': {'silhouetteColor': None, 'clipping': False, 'showSilhouette': False, 'showShadows': False, 'viewSize': 7.1098799546999, 'labelsOnTop': True, 'depthCueRange': (0.5, 1), 'silhouetteWidth': 2, 'singleLayerTransparency': True, 'shadowTextureSize': 2048, 'backgroundImage': [None, 1, 2, 1, 0, 0], 'backgroundGradient': [('Chimera default', [(1, 1, 1, 1), (0, 0, 1, 1)], 1), 1, 0, 0], 'depthCue': True, 'highlight': 0, 'scaleFactor': 1, 'angleDependentTransparency': True, 'backgroundMethod': 0}, 'viewerHL': 22, 'cameraMode': 'mono', 'detail': 1.5, 'viewerFog': None, 'viewerBG': 21}

	replyobj.status("Initializing session restore...", blankAfter=0,
		secondary=True)
	from SimpleSession.versions.v65 import expandSummary
	init(dict(enumerate(expandSummary(colorInfo))))
	replyobj.status("Restoring colors...", blankAfter=0,
		secondary=True)
	restoreColors(colors, materials)
	replyobj.status("Restoring molecules...", blankAfter=0,
		secondary=True)
	restoreMolecules(molInfo, resInfo, atomInfo, bondInfo, crdInfo)
	replyobj.status("Restoring surfaces...", blankAfter=0,
		secondary=True)
	restoreSurfaces(surfInfo)
	replyobj.status("Restoring VRML models...", blankAfter=0,
		secondary=True)
	restoreVRML(vrmlInfo)
	replyobj.status("Restoring pseudobond groups...", blankAfter=0,
		secondary=True)
	restorePseudoBondGroups(pbInfo)
	replyobj.status("Restoring model associations...", blankAfter=0,
		secondary=True)
	restoreModelAssociations(modelAssociations)
	replyobj.status("Restoring camera...", blankAfter=0,
		secondary=True)
	restoreViewer(viewerInfo)

try:
	restoreCoreModels()
except:
	reportRestoreError("Error restoring core models")

	replyobj.status("Restoring extension info...", blankAfter=0,
		secondary=True)


try:
	import StructMeasure
	from StructMeasure.DistMonitor import restoreDistances
	registerAfterModelsCB(restoreDistances, 1)
except:
	reportRestoreError("Error restoring distances in session")


def restoreMidasBase():
	formattedPositions = {'session-start': (1.0, 7.1098799546999, (2.745, 66.5175, 62.820999990463), (81.360616388607, 52.387383644772), 62.820999990463, {(0, 0): ((0.0, 0.0, 0.0), (0.0, 0.0, 1.0, 0.0)), (102, 0): ((0.0, 0.0, 0.0), (0.0, 0.0, 1.0, 0.0)), (2, 0): ((0.0, 0.0, 0.0), (0.0, 0.0, 1.0, 0.0)), (101, 0): ((0.0, 0.0, 0.0), (0.0, 0.0, 1.0, 0.0)), (1, 0): ((0.0, 0.0, 0.0), (0.0, 0.0, 1.0, 0.0)), (100, 0): ((0.0, 0.0, 0.0), (0.0, 0.0, 1.0, 0.0))}, {(2, 0, 'Molecule'): (False, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, False, 5.0), (1, 0, 'Molecule'): (False, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, False, 5.0), (0, 0, 'Molecule'): (False, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, False, 5.0), (102, 0, 'Molecule'): (False, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, False, 5.0), (101, 0, 'Molecule'): (False, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, False, 5.0), (100, 0, 'Molecule'): (False, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, False, 5.0)}, 4, (2.745, 66.5175, 67.80900015749407), False, 17.567064639105)}
	import Midas
	Midas.restoreMidasBase(formattedPositions)
try:
	restoreMidasBase()
except:
	reportRestoreError('Error restoring Midas base state')


def restoreMidasText():
	from Midas import midas_text
	midas_text.aliases = {}
	midas_text.userSurfCategories = {}

try:
	restoreMidasText()
except:
	reportRestoreError('Error restoring Midas text state')


def restore_volume_data():
 volume_data_state = \
  {
   'class': 'Volume_Manager_State',
   'data_and_regions_state': [ ],
   'version': 2,
  }
 from VolumeViewer import session
 session.restore_volume_data_state(volume_data_state)

try:
  restore_volume_data()
except:
  reportRestoreError('Error restoring volume data')


def restore_cap_attributes():
 cap_attributes = \
  {
   'cap_attributes': [ ],
   'cap_color': None,
   'cap_offset': 0.01,
   'class': 'Caps_State',
   'default_cap_offset': 0.01,
   'mesh_style': False,
   'shown': True,
   'subdivision_factor': 1.0,
   'version': 1,
  }
 import SurfaceCap.session
 SurfaceCap.session.restore_cap_attributes(cap_attributes)
registerAfterModelsCB(restore_cap_attributes)

geomData = {'AxisManager': {}, 'CentroidManager': {}, 'PlaneManager': {}}

try:
	from StructMeasure.Geometry import geomManager
	geomManager._restoreSession(geomData)
except:
	reportRestoreError("Error restoring geometry objects in session")


def restoreSession_RibbonStyleEditor():
	import SimpleSession
	import RibbonStyleEditor
	userScalings = []
	userXSections = []
	userResidueClasses = []
	residueData = [(6, 'Chimera default', 'rounded', u'unknown'), (7, 'Chimera default', 'rounded', u'unknown'), (8, 'Chimera default', 'rounded', u'unknown'), (9, 'Chimera default', 'rounded', u'unknown'), (10, 'Chimera default', 'rounded', u'unknown'), (11, 'Chimera default', 'rounded', u'unknown')]
	flags = RibbonStyleEditor.NucleicDefault1
	SimpleSession.registerAfterModelsCB(RibbonStyleEditor.restoreState,
				(userScalings, userXSections,
				userResidueClasses, residueData, flags))
try:
	restoreSession_RibbonStyleEditor()
except:
	reportRestoreError("Error restoring RibbonStyleEditor state")

trPickle = 'gAJjQW5pbWF0ZS5UcmFuc2l0aW9ucwpUcmFuc2l0aW9ucwpxASmBcQJ9cQMoVQxjdXN0b21fc2NlbmVxBGNBbmltYXRlLlRyYW5zaXRpb24KVHJhbnNpdGlvbgpxBSmBcQZ9cQcoVQZmcmFtZXNxCEsBVQ1kaXNjcmV0ZUZyYW1lcQlLAVUKcHJvcGVydGllc3EKXXELVQNhbGxxDGFVBG5hbWVxDVUMY3VzdG9tX3NjZW5lcQ5VBG1vZGVxD1UGbGluZWFycRB1YlUIa2V5ZnJhbWVxEWgFKYFxEn1xEyhoCEsUaAlLAWgKXXEUaAxhaA1VCGtleWZyYW1lcRVoD2gQdWJVBXNjZW5lcRZoBSmBcRd9cRgoaAhLAWgJSwFoCl1xGWgMYWgNVQVzY2VuZXEaaA9oEHVidWIu'
scPickle = 'gAJjQW5pbWF0ZS5TY2VuZXMKU2NlbmVzCnEBKYFxAn1xA1UHbWFwX2lkc3EEfXNiLg=='
kfPickle = 'gAJjQW5pbWF0ZS5LZXlmcmFtZXMKS2V5ZnJhbWVzCnEBKYFxAn1xA1UHZW50cmllc3EEXXEFc2Iu'
def restoreAnimation():
	'A method to unpickle and restore animation objects'
	# Scenes must be unpickled after restoring transitions, because each
	# scene links to a 'scene' transition. Likewise, keyframes must be 
	# unpickled after restoring scenes, because each keyframe links to a scene.
	# The unpickle process is left to the restore* functions, it's 
	# important that it doesn't happen prior to calling those functions.
	import SimpleSession
	from Animate.Session import restoreTransitions
	from Animate.Session import restoreScenes
	from Animate.Session import restoreKeyframes
	SimpleSession.registerAfterModelsCB(restoreTransitions, trPickle)
	SimpleSession.registerAfterModelsCB(restoreScenes, scPickle)
	SimpleSession.registerAfterModelsCB(restoreKeyframes, kfPickle)
try:
	restoreAnimation()
except:
	reportRestoreError('Error in Animate.Session')

def restoreLightController():
	import Lighting
	Lighting._setFromParams({'ratio': 1.25, 'brightness': 1.16, 'material': [30.0, (0.85, 0.85, 0.85), 1.0], 'back': [(0.3574067443365933, 0.6604015517481455, -0.6604015517481456), (1.0, 1.0, 1.0), 0.0], 'mode': 'two-point', 'key': [(-0.3574067443365933, 0.6604015517481455, 0.6604015517481456), (1.0, 1.0, 1.0), 1.0], 'contrast': 0.83, 'fill': [(0.2505628070857316, 0.2505628070857316, 0.9351131265310294), (1.0, 1.0, 1.0), 0.0]})
try:
	restoreLightController()
except:
	reportRestoreError("Error restoring lighting parameters")


def restoreRemainder():
	from SimpleSession.versions.v65 import restoreWindowSize, \
	     restoreOpenStates, restoreSelections, restoreFontInfo, \
	     restoreOpenModelsAttrs, restoreModelClip, restoreSilhouettes

	curSelIds =  []
	savedSels = []
	openModelsAttrs = { 'cofrMethod': 4 }
	windowSize = (904, 945)
	xformMap = {0: (((-0.71342016124619, 0.46966164340959, 0.52004770380923), 51.165555715817), (21.324866230769, -25.765032198418, 52.727251963438), True), 1: (((-0.71342016124619, 0.46966164340959, 0.52004770380923), 51.165555715817), (21.324866230769, -25.765032198418, 52.727251963438), True), 2: (((-0.71342016124619, 0.46966164340959, 0.52004770380923), 51.165555715817), (21.324866230769, -25.765032198418, 52.727251963438), True), 3: (((-0.71342016124619, 0.46966164340959, 0.52004770380923), 51.165555715817), (21.324866230769, -25.765032198418, 52.727251963438), True), 4: (((-0.71342016124619, 0.46966164340959, 0.52004770380923), 51.165555715817), (21.324866230769, -25.765032198418, 52.727251963438), True), 5: (((-0.71342016124619, 0.46966164340959, 0.52004770380923), 51.165555715817), (21.324866230769, -25.765032198418, 52.727251963438), True)}
	fontInfo = {'face': (u'Fixed', u'Bold', 24)}
	clipPlaneInfo = {}
	silhouettes = {0: True, 1: True, 2: True, 3: True, 4: True, 5: True, 503: True}

	replyobj.status("Restoring window...", blankAfter=0,
		secondary=True)
	restoreWindowSize(windowSize)
	replyobj.status("Restoring open states...", blankAfter=0,
		secondary=True)
	restoreOpenStates(xformMap)
	replyobj.status("Restoring font info...", blankAfter=0,
		secondary=True)
	restoreFontInfo(fontInfo)
	replyobj.status("Restoring selections...", blankAfter=0,
		secondary=True)
	restoreSelections(curSelIds, savedSels)
	replyobj.status("Restoring openModel attributes...", blankAfter=0,
		secondary=True)
	restoreOpenModelsAttrs(openModelsAttrs)
	replyobj.status("Restoring model clipping...", blankAfter=0,
		secondary=True)
	restoreModelClip(clipPlaneInfo)
	replyobj.status("Restoring per-model silhouettes...", blankAfter=0,
		secondary=True)
	restoreSilhouettes(silhouettes)

	replyobj.status("Restoring remaining extension info...", blankAfter=0,
		secondary=True)
try:
	restoreRemainder()
except:
	reportRestoreError("Error restoring post-model state")
from SimpleSession.versions.v65 import makeAfterModelsCBs
makeAfterModelsCBs()

from SimpleSession.versions.v65 import endRestore
replyobj.status('Finishing restore...', blankAfter=0, secondary=True)
endRestore({})
replyobj.status('', secondary=True)
replyobj.status('Restore finished.')

